{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\el\\xEDsabet\\\\Documents\\\\web-dev\\\\react\\\\react_final_exam\\\\client\\\\src\\\\pages\\\\ReviewBook.js\";\nimport React, { useState, useEffect } from \"react\";\nimport isAuthorized from \"../auth/isAuthorized\";\nimport { Link, useParams } from \"react-router-dom\";\nimport '../css/reviewBook.css';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, FormControl, Input, InputLabel, TextField } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n    justifySelf: 'center',\n    color: 'white',\n    maxHeight: '40px'\n  }\n}));\n\nconst ReviewBook = props => {\n  const classes = useStyles();\n  const [book, setBook] = useState();\n  const [reviewText, setReviewText] = useState();\n  const [reviewTitle, setReviewTitle] = useState();\n  const [reviewRating, setReviewRating] = useState();\n  let {\n    id\n  } = useParams(); // console.log(id)\n\n  useEffect(() => {\n    let isFetching = true;\n\n    const fetchBook = async () => {\n      const response = await axios(`https://www.googleapis.com/books/v1/volumes/${id}`, {\n        withCredentials: false\n      });\n      console.log(response.data);\n\n      if (isFetching) {\n        setBook(response.data);\n      }\n    };\n\n    fetchBook();\n    return () => isFetching = false;\n  }, [id]);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    console.log('submit review');\n\n    try {\n      await axios.post('http://localhost/addReview', {\n        reviewText,\n        reviewRating,\n        bookID: id,\n        reviewTitle,\n        bookTitle: book.volumeInfo.title,\n        img: book.volumeInfo.imageLinks.smallThumbnail\n      });\n      props.onNotification('Review successfully posted');\n      setTimeout(() => {\n        props.history.push('/read_it/reviews');\n      }, 3000);\n    } catch (err) {\n      if (err) {\n        props.onError(err.response.data.error);\n      }\n    }\n  };\n\n  if (!id) {\n    return props.history.push('/read_it/profile');\n  }\n\n  if (!props.isAuthorized) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notAuthorized\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Please login to review this book\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Login\"));\n  }\n\n  if (book) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \"Back to Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reviewForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Create Review of \", book.volumeInfo.title), /*#__PURE__*/React.createElement(\"img\", {\n      src: book.volumeInfo.imageLinks.smallThumbnail,\n      alt: book.volumeInfo.title + 'cover image',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Title of Review\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"title\",\n      type: \"text\",\n      id: \"title\",\n      onChange: e => setReviewTitle(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"rating\",\n      type: \"number\",\n      id: \"rating\",\n      onChange: e => setReviewRating(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"standard-textarea\",\n      label: \"Review\",\n      multiline: true,\n      onChange: e => setReviewText(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.submit,\n      onClick: e => handleClick(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Submit Review\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 16\n      }\n    }, \"Review\");\n  }\n};\n\nexport default isAuthorized(ReviewBook);","map":{"version":3,"sources":["C:/Users/el√≠sabet/Documents/web-dev/react/react_final_exam/client/src/pages/ReviewBook.js"],"names":["React","useState","useEffect","isAuthorized","Link","useParams","axios","makeStyles","Button","FormControl","Input","InputLabel","TextField","useStyles","theme","submit","marginTop","spacing","unit","justifySelf","color","maxHeight","ReviewBook","props","classes","book","setBook","reviewText","setReviewText","reviewTitle","setReviewTitle","reviewRating","setReviewRating","id","isFetching","fetchBook","response","withCredentials","console","log","data","handleClick","e","preventDefault","post","bookID","bookTitle","volumeInfo","title","img","imageLinks","smallThumbnail","onNotification","setTimeout","history","push","err","onError","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport isAuthorized from \"../auth/isAuthorized\";\r\nimport { Link, useParams  } from \"react-router-dom\";\r\nimport  '../css/reviewBook.css'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    TextField\r\n  } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n     submit: {\r\n      marginTop: theme.spacing.unit * 3,\r\n      justifySelf: 'center',\r\n      color:'white',\r\n      maxHeight: '40px'\r\n    },\r\n  }));\r\n\r\n\r\nconst ReviewBook = (props) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [ book, setBook ] = useState()\r\n    const [ reviewText, setReviewText ] = useState()\r\n    const [ reviewTitle, setReviewTitle ] = useState()\r\n    const [ reviewRating, setReviewRating ] = useState()\r\n\r\n   let { id }= useParams()\r\n    // console.log(id)\r\n\r\n\r\n    useEffect(() => {\r\n        let isFetching = true\r\n        const fetchBook = async () => {\r\n          \r\n            const response = await axios(`https://www.googleapis.com/books/v1/volumes/${id}`, {withCredentials:false})\r\n            console.log(response.data)\r\n            if(isFetching){\r\n                setBook(response.data)\r\n            }\r\n        }\r\n\r\n        fetchBook()\r\n        return () => isFetching = false\r\n    },[id])\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault()\r\n        console.log('submit review')\r\n        try{\r\n            await axios.post('http://localhost/addReview', {\r\n            reviewText, \r\n            reviewRating,\r\n            bookID:id,\r\n            reviewTitle,\r\n            bookTitle: book.volumeInfo.title,\r\n            img: book.volumeInfo.imageLinks.smallThumbnail\r\n        })\r\n        props.onNotification('Review successfully posted')\r\n            setTimeout(() => {\r\n                props.history.push('/read_it/reviews')\r\n            },3000)\r\n        }catch(err){\r\n            if(err){\r\n                props.onError(err.response.data.error)\r\n             }\r\n        }\r\n        \r\n    }\r\n\r\n    if(!id){\r\n        return (\r\n            props.history.push('/read_it/profile')\r\n        )\r\n    }\r\n\r\n    if(!props.isAuthorized){\r\n        return(\r\n            <div className=\"notAuthorized\">\r\n                <h1>Please login to review this book</h1>\r\n                <Link to=\"login\">Login</Link>\r\n            </div>\r\n            )\r\n    }\r\n    if(book){\r\n        \r\n    return (\r\n        <>\r\n        <Link to=\"/profile\">Back to Profile</Link>\r\n        \r\n        <div className=\"reviewForm\">\r\n      \r\n            <h1>Create Review of {book.volumeInfo.title}</h1>\r\n        \r\n            <img src={book.volumeInfo.imageLinks.smallThumbnail} alt={book.volumeInfo.title + 'cover image'}/>\r\n        \r\n            <form>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel htmlFor=\"title\">Title of Review</InputLabel>\r\n                <Input name=\"title\" type=\"text\" id=\"title\" onChange={(e) => setReviewTitle(e.target.value)}/>\r\n          </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel htmlFor=\"rating\">Rating</InputLabel>\r\n                <Input name=\"rating\" type=\"number\" id=\"rating\" onChange={(e) => setReviewRating(e.target.value)}/>\r\n          </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                {/* <InputLabel htmlFor=\"review\">Review</InputLabel> */}\r\n                <TextField required\r\n          id=\"standard-textarea\"\r\n          label=\"Review\"\r\n          multiline\r\n  onChange={(e) => setReviewText(e.target.value)}/>\r\n          </FormControl>\r\n          \r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n             onClick={(e) => handleClick(e)}>Submit Review</Button>\r\n        </form>\r\n      \r\n        </div>\r\n        </>\r\n    )\r\n    }else{\r\n        return <h1>Review</h1>\r\n    }\r\n}\r\n\r\nexport default isAuthorized(ReviewBook)"]},"metadata":{},"sourceType":"module"}