{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\el\\xEDsabet\\\\Documents\\\\web-dev\\\\react\\\\react_final_exam\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport SearchResult from '../components/SearchResult';\nimport isAuthorized from '../auth/isAuthorized';\nimport '../css/form.css';\nimport '../css/searchResults.css';\nimport apiCred from '../config/api';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    marginTop: theme.spacing * 3,\n    justifySelf: 'center',\n    color: 'white'\n  }\n}));\n\nconst Search = props => {\n  const classes = useStyles();\n  const [searchString, setSearchString] = useState();\n  const [searchResults, setSearchResults] = useState();\n  const [likedBooks, setLikedBooks] = useState('');\n\n  const validateForm = () => {\n    if (!searchString) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleSearch = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios(`https://www.googleapis.com/books/v1/volumes?q=${searchString}&keys:${apiCred.key}`, {\n        withCredentials: false\n      });\n      console.log(response.data);\n      const bookArray = response.data.items;\n      bookArray.map(bookInfo => {\n        let book = bookInfo.volumeInfo;\n        console.log(book);\n        return book;\n      });\n      setSearchResults(bookArray);\n    } catch (err) {\n      if (err) {\n        props.onError(err.response.data.error);\n      }\n    }\n  };\n\n  const handleError = data => {\n    props.onError(data);\n  };\n\n  const handleNotification = data => {\n    props.onNotification(data);\n  };\n\n  useEffect(() => {\n    const fetchLikedBooks = async () => {\n      try {\n        const response = await axios('https://https://read-it-react.herokuapp.com/getBooksInLibrary'); // console.log(response.data)\n\n        setLikedBooks(response.data);\n      } catch (err) {\n        if (err) {\n          props.onError(err.response.data.error);\n        }\n      }\n    };\n\n    if (props.isAuthorized) {\n      fetchLikedBooks();\n    }\n  }, [props.isAuthorized]); // TODO add review book button\n  // TODO if user has liked book make heart filled \n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Search for Books\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"searchForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    margin: \"normal\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Search by Book Title\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"search\",\n    type: \"text\",\n    id: \"search\",\n    autoComplete: \"search\",\n    onChange: e => setSearchString(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.submit,\n    onClick: e => handleSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchResultContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, searchResults ? searchResults.map(result => {\n    return /*#__PURE__*/React.createElement(SearchResult, Object.assign({}, result, {\n      key: result.volumeInfo.title + result.volumeInfo.id,\n      disabled: validateForm,\n      error: handleError,\n      notification: handleNotification,\n      likedBooks: likedBooks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 24\n      }\n    }));\n  }) : null));\n};\n\nexport default isAuthorized(Search);","map":{"version":3,"sources":["C:/Users/elÃ­sabet/Documents/web-dev/react/react_final_exam/client/src/pages/Search.js"],"names":["React","useState","useEffect","axios","SearchResult","isAuthorized","apiCred","makeStyles","Button","FormControl","Input","InputLabel","useStyles","theme","submit","marginTop","spacing","justifySelf","color","Search","props","classes","searchString","setSearchString","searchResults","setSearchResults","likedBooks","setLikedBooks","validateForm","handleSearch","e","preventDefault","response","key","withCredentials","console","log","data","bookArray","items","map","bookInfo","book","volumeInfo","err","onError","error","handleError","handleNotification","onNotification","fetchLikedBooks","target","value","result","title","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport SearchResult from '../components/SearchResult'\r\nimport isAuthorized from '../auth/isAuthorized'\r\nimport  '../css/form.css'\r\nimport '../css/searchResults.css'\r\n\r\nimport apiCred from '../config/api'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Input,\r\n    InputLabel\r\n  } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n     submit: {\r\n      marginTop: theme.spacing * 3,\r\n      justifySelf: 'center',\r\n      color:'white'\r\n    },\r\n  }));\r\n\r\nconst Search = (props) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [ searchString, setSearchString ] = useState()\r\n    const [ searchResults, setSearchResults ] = useState()\r\n    const [ likedBooks, setLikedBooks ] = useState('')\r\n\r\n    const validateForm = () => {\r\n        if(!searchString){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault()\r\n        try{\r\n            const response = await axios(`https://www.googleapis.com/books/v1/volumes?q=${searchString}&keys:${apiCred.key}`,  {\r\n            withCredentials: false })\r\n        console.log(response.data)\r\n        const bookArray = response.data.items\r\n        bookArray.map(bookInfo => {\r\n            let book = bookInfo.volumeInfo\r\n            console.log(book)\r\n            return book\r\n        })\r\n        setSearchResults(bookArray)\r\n        }catch(err){\r\n            if(err){\r\n                props.onError(err.response.data.error)\r\n             }\r\n        }\r\n        \r\n    }\r\n\r\n    const handleError = (data) => {\r\n        props.onError(data)\r\n    }\r\n    const handleNotification = (data) => {\r\n        props.onNotification(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchLikedBooks = async () => {\r\n            try{\r\n                const response = await axios('https://https://read-it-react.herokuapp.com/getBooksInLibrary')\r\n            // console.log(response.data)\r\n                setLikedBooks(response.data)\r\n            \r\n            }catch(err){\r\n                if(err){\r\n                    props.onError(err.response.data.error)\r\n                 }\r\n            }\r\n            \r\n        }\r\n        \r\n       if(props.isAuthorized){\r\n        fetchLikedBooks()\r\n       } \r\n    },[props.isAuthorized])\r\n// TODO add review book button\r\n// TODO if user has liked book make heart filled \r\n\r\n    return(\r\n        <>\r\n        <h1>Search for Books</h1>\r\n        <form className=\"searchForm\">\r\n            <FormControl margin=\"normal\"  fullWidth>\r\n            <InputLabel htmlFor=\"search\">Search by Book Title</InputLabel>\r\n            <Input name=\"search\" type=\"text\" id=\"search\" autoComplete=\"search\" onChange={(e) => setSearchString(e.target.value)}/>\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit} onClick={(e)=> handleSearch(e)} >Search</Button>\r\n        </form>\r\n        <div className=\"searchResultContainer\">\r\n        {searchResults?\r\n            searchResults.map(result=> {\r\n                return <SearchResult {...result} key={result.volumeInfo.title+result.volumeInfo.id} disabled={validateForm} error={handleError} notification={handleNotification} likedBooks={likedBooks}/>\r\n            })\r\n        : null}\r\n        </div>\r\n           \r\n            \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default isAuthorized(Search)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}