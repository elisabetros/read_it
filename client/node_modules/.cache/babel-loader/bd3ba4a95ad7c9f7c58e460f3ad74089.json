{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\el\\xEDsabet\\\\Documents\\\\web-dev\\\\react\\\\react_final_exam\\\\client\\\\src\\\\pages\\\\Reviews.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport reviewCSS from '../css/review.css';\nimport Review from \"../components/Review\";\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    marginTop: theme.spacing * 3,\n    justifySelf: 'center',\n    color: 'white'\n  }\n}));\nexport default function Reviews(props) {\n  const classes = useStyles();\n  const [reviews, setReviews] = useState();\n  const [searchStr, setSearchStr] = useState();\n  const [clearSearch, setClearSearch] = useState(false);\n  useEffect(() => {\n    let isFetching = true;\n\n    const fetchReviews = async () => {\n      try {\n        const response = await axios('http://localhost/getReviews');\n        console.log(response.data);\n\n        if (isFetching) {\n          setReviews(response.data);\n        }\n      } catch (err) {\n        if (err) {\n          props.onError(err.response.data.error);\n        }\n      }\n    };\n\n    fetchReviews();\n    return () => isFetching = false;\n  }, [props, clearSearch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchStr) {\n      const matches = reviews.filter(review => {\n        console.log(review);\n\n        if (review.book_title.toLowerCase().includes(searchStr.toLowerCase()) || review.user.first_name.toLowerCase().includes(searchStr.toLowerCase()) || review.user.last_name.toLowerCase().includes(searchStr.toLowerCase())) {\n          return review;\n        }\n      });\n      console.log(matches.length);\n\n      if (matches.length === 0) {\n        console.log(matches);\n        props.onError('No reviews match your search');\n        return;\n      } else {\n        setReviews(matches);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reviewsWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Reviews\"), searchStr ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clearBtn btn\",\n    onClick: () => setClearSearch(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Clear Search\") : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"searchForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    margin: \"normal\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"searchStr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Search for Reviews\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"searchStr\",\n    type: \"text\",\n    id: \"searchStr\",\n    onChange: e => setSearchStr(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.submit,\n    onClick: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Search\")), reviews ? reviews.map(review => {\n    return /*#__PURE__*/React.createElement(Review, Object.assign({}, review, {\n      key: review.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 24\n      }\n    }));\n  }) : null);\n}","map":{"version":3,"sources":["C:/Users/elÃ­sabet/Documents/web-dev/react/react_final_exam/client/src/pages/Reviews.js"],"names":["React","useState","useEffect","axios","reviewCSS","Review","makeStyles","Button","FormControl","Input","InputLabel","useStyles","theme","submit","marginTop","spacing","justifySelf","color","Reviews","props","classes","reviews","setReviews","searchStr","setSearchStr","clearSearch","setClearSearch","isFetching","fetchReviews","response","console","log","data","err","onError","error","handleSubmit","e","preventDefault","matches","filter","review","book_title","toLowerCase","includes","user","first_name","last_name","length","target","value","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport reviewCSS from '../css/review.css'\r\nimport Review from \"../components/Review\";\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Input,\r\n    InputLabel\r\n  } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n     submit: {\r\n      marginTop: theme.spacing * 3,\r\n      justifySelf: 'center',\r\n      color:'white'\r\n    },\r\n  }));\r\n\r\nexport default function Reviews(props) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [ reviews, setReviews ] = useState()\r\n    const [ searchStr, setSearchStr ] = useState()\r\n    const [ clearSearch, setClearSearch ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let isFetching = true\r\n        const fetchReviews = async () => {\r\n            try{\r\n                const response = await axios('http://localhost/getReviews')\r\n                console.log(response.data)\r\n                if(isFetching){\r\n                    setReviews(response.data)\r\n                }\r\n            }catch(err){\r\n                if(err){\r\n                    props.onError(err.response.data.error)\r\n                 }\r\n            }\r\n           \r\n        } \r\n        fetchReviews()\r\n        return () => isFetching= false\r\n    },[props, clearSearch])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(searchStr){\r\n           const matches = reviews.filter(review => {\r\n               console.log(review)\r\n            if(review.book_title.toLowerCase().includes(searchStr.toLowerCase()) \r\n            || review.user.first_name.toLowerCase().includes(searchStr.toLowerCase()) \r\n            || review.user.last_name.toLowerCase().includes(searchStr.toLowerCase()) ){\r\n                return review\r\n            }\r\n        })\r\n        console.log(matches.length)\r\n        if(matches.length === 0){\r\n            console.log(matches)\r\n            props.onError('No reviews match your search')\r\n            return\r\n        }else{\r\n            setReviews(matches)\r\n\r\n        }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"reviewsWrapper\">\r\n            <h1>Reviews</h1>\r\n                {searchStr? <div className=\"clearBtn btn\" onClick={() => setClearSearch(true)}>Clear Search</div>:null}\r\n            <form className=\"searchForm\">\r\n                <FormControl margin=\"normal\" fullWidth>\r\n                    <InputLabel htmlFor=\"searchStr\">Search for Reviews</InputLabel>\r\n                    <Input name=\"searchStr\" type=\"text\" id=\"searchStr\"  onChange={(e) => setSearchStr(e.target.value)}/>\r\n                </FormControl>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={(e)=> handleSubmit(e)}\r\n                    >Search</Button>\r\n            </form>\r\n            {reviews ? \r\n            reviews.map(review => {\r\n                return <Review {...review} key={review.id}/>                \r\n            })\r\n        : null}\r\n        \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}