{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\el\\xEDsabet\\\\Documents\\\\web-dev\\\\react\\\\react_final_exam\\\\client\\\\src\\\\pages\\\\BookDetail.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/bookDetail.css';\nimport parse from 'html-react-parser';\nimport Review from \"../components/Review\";\n\nconst BookDetail = props => {\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [book, setBook] = useState();\n  const [reviews, setReviews] = useState();\n  useEffect(() => {\n    let isFetching = true;\n\n    const fetchBook = async () => {\n      try {\n        const response = await axios(`https://www.googleapis.com/books/v1/volumes/${id}`, {\n          withCredentials: false\n        });\n\n        if (isFetching) {\n          setBook(response.data);\n        }\n      } catch (err) {\n        props.onError(err.response.data.error);\n      }\n    };\n\n    const fetchReviews = async () => {\n      try {\n        const response = await axios(`http://localhost/getSingleBookReviews/${id}`);\n        console.log(response.data);\n\n        if (isFetching) {\n          setReviews(response.data);\n        } // && response.data.length\n\n      } catch (err) {\n        props.onError(err.response.data.error);\n      }\n    };\n\n    fetchBook();\n    fetchReviews();\n    return () => isFetching = false;\n  }, [props, id]);\n\n  if (!book) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  console.log(history);\n  console.log(book);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"link\",\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookDetail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, book.volumeInfo.title), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, book.volumeInfo.subtitle)), /*#__PURE__*/React.createElement(\"img\", {\n    src: book.volumeInfo.imageLinks.smallThumbnail,\n    alt: \"book cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pub-authors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, book.volumeInfo.authors ? book.volumeInfo.authors.map((author, index) => {\n    // console.log(author)\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      key: author + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }\n    }, \" By: \", author);\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Published: \", new Date(book.volumeInfo.publishedDate).toDateString().slice(4, 15)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Published by: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 38\n    }\n  }, book.volumeInfo.publisher)))), book.volumeInfo.description ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 43\n    }\n  }, parse(book.volumeInfo.description)) : null, /*#__PURE__*/React.createElement(\"a\", {\n    href: book.volumeInfo.infoLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"More Information\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reviews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Reviews\"), reviews ? reviews.map(review => {\n    return /*#__PURE__*/React.createElement(Review, Object.assign({}, review, {\n      key: review.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }\n    }));\n  }) : null));\n};\n\nexport default BookDetail;","map":{"version":3,"sources":["C:/Users/el√≠sabet/Documents/web-dev/react/react_final_exam/client/src/pages/BookDetail.js"],"names":["React","useEffect","useState","useParams","useHistory","axios","parse","Review","BookDetail","props","id","history","book","setBook","reviews","setReviews","isFetching","fetchBook","response","withCredentials","data","err","onError","error","fetchReviews","console","log","goBack","volumeInfo","title","subtitle","imageLinks","smallThumbnail","authors","map","author","index","Date","publishedDate","toDateString","slice","publisher","description","infoLink","review"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../css/bookDetail.css'\r\nimport parse from 'html-react-parser';\r\nimport Review from \"../components/Review\";\r\n\r\nconst BookDetail = (props) => {\r\n\r\n    let { id }= useParams()\r\n    \r\n    let history = useHistory()\r\n\r\n   \r\n    const [ book, setBook ] = useState()\r\n    const [ reviews, setReviews ] = useState()\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        let isFetching = true\r\n        const fetchBook= async () => {\r\n            try{\r\n               const response =  await axios(`https://www.googleapis.com/books/v1/volumes/${id}`, { withCredentials: false })\r\n                if(isFetching){\r\n                    setBook(response.data)\r\n                }\r\n            }catch(err){\r\n                props.onError(err.response.data.error)\r\n            }\r\n        }\r\n        const fetchReviews = async () => {\r\n            try{\r\n                const response = await axios (`http://localhost/getSingleBookReviews/${id}`)\r\n                console.log(response.data)\r\n                if(isFetching){\r\n                    setReviews(response.data)\r\n                } // && response.data.length\r\n            }catch(err){\r\n                props.onError(err.response.data.error)\r\n            }\r\n        }\r\n        fetchBook()\r\n        fetchReviews()\r\n        return () => isFetching = false\r\n    }, [props, id])\r\n\r\n\r\n\r\nif(!book){\r\n    return <div className=\"loader\">Loading...</div>\r\n}\r\n\r\nconsole.log(history)\r\nconsole.log(book)\r\n    return (\r\n        <>\r\n        <button className=\"link\" onClick={() => history.goBack()}>Back</button>\r\n        <div className=\"bookDetail\">\r\n            <div>\r\n                <h1>{book.volumeInfo.title}</h1>\r\n                <h2>{book.volumeInfo.subtitle}</h2>\r\n            </div>\r\n            <img src={book.volumeInfo.imageLinks.smallThumbnail} alt=\"book cover\"/>\r\n            <div className=\"pub-authors\">\r\n                <div>\r\n                {book.volumeInfo.authors? book.volumeInfo.authors.map((author, index) => {\r\n                        // console.log(author)\r\n                        return <h4 key={author+index}> By: {author}</h4>\r\n                    }) : null }\r\n                </div>\r\n                <div>\r\n                    <p>Published: {new Date(book.volumeInfo.publishedDate).toDateString().slice(4,15)}</p>\r\n                    <p>Published by: <strong>{book.volumeInfo.publisher}</strong></p>\r\n                </div>\r\n            </div>\r\n            {book.volumeInfo.description? <div>{parse(book.volumeInfo.description)}</div>: null}\r\n        \r\n            <a href={book.volumeInfo.infoLink}>More Information</a>\r\n        </div>\r\n        <div className=\"reviews\">\r\n            <h2>Reviews</h2>\r\n            {reviews ? \r\n            reviews.map(review => {\r\n               return <Review {...review} key={review.id}/>\r\n            })\r\n        : null}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookDetail"]},"metadata":{},"sourceType":"module"}